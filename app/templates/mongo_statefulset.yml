apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-mongo"
spec:
  replicas: 1  # Single instance for testing
  serviceName: "{{ .Release.Name }}-mongo-service"
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-mongo"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-mongo"
    spec:
      containers:
      - name: mongo
        image: "{{ .Values.mongo.image }}:{{ .Values.mongo.tag }}"
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-mongo-secret"
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-mongo-secret"
              key: password
        - name: MONGO_INITDB_DATABASE
          value: "travelease"
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
        resources:
          requests:
            cpu: {{ .Values.resources.mongo.requests.cpu }}
            memory: {{ .Values.resources.mongo.requests.memory }}
          limits:
            cpu: {{ .Values.resources.mongo.limits.cpu }}
            memory: {{ .Values.resources.mongo.limits.memory }}
  volumeClaimTemplates:
  - metadata:
      name: mongo-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.mongo.storage.storageClass }}
      resources:
        requests:
          storage: {{ .Values.mongo.storage.size }}
