{
  "name": "TravelEase Chat Agent - Compatible Version",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "travelease-chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Chat Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [240, 300],
      "id": "webhook-001"
    },
    {
      "parameters": {
        "jsCode": "// Process the chat input and determine intent\nconst chatInput = $json.message || $json.chatInput || '';\nconst message = chatInput.toLowerCase().trim();\n\n// Check for greeting\nconst isGreeting = message === '' || \n                  message.includes('hi') || \n                  message.includes('hello') || \n                  message.includes('start');\n\n// Check for destination query\nconst isDestinationQuery = message.includes('destination') ||\n                          message.includes('place') ||\n                          message.includes('travel') ||\n                          message.includes('visit') ||\n                          message.includes('tour') ||\n                          message.includes('paris') ||\n                          message.includes('tokyo') ||\n                          message.includes('rome') ||\n                          message.includes('bali') ||\n                          message.includes('sydney') ||\n                          message.includes('new york');\n\nreturn {\n  chatInput: chatInput,\n  message: message,\n  isGreeting: isGreeting,\n  isDestinationQuery: isDestinationQuery\n};"
      },
      "name": "Process Input",
      "type": "n8n-nodes-base.code",
      "position": [460, 300],
      "id": "process-input-001"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.isGreeting }}",
              "value2": true,
              "operation": "equal"
            }
          ]
        }
      },
      "name": "Is Greeting?",
      "type": "n8n-nodes-base.if",
      "position": [680, 200],
      "id": "greeting-check-001"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.isDestinationQuery }}",
              "value2": true,
              "operation": "equal"
            }
          ]
        }
      },
      "name": "Is Destination Query?",
      "type": "n8n-nodes-base.if",
      "position": [680, 400],
      "id": "destination-check-001"
    },
    {
      "parameters": {
        "jsCode": "return {\n  response: \"Hi! What can I do for you? üåç\\n\\nI can help you with information about travel destinations. Just ask me about any place you'd like to visit!\\n\\nTry asking:\\n‚Ä¢ 'Tell me about Paris'\\n‚Ä¢ 'Show me destinations'\\n‚Ä¢ 'What places can I visit?'\",\n  type: \"greeting\"\n};"
      },
      "name": "Greeting Response",
      "type": "n8n-nodes-base.code",
      "position": [900, 100],
      "id": "greeting-response-001"
    },
    {
      "parameters": {
        "operation": "find",
        "collection": "destinations",
        "query": "{\n  \"$or\": [\n    { \"name\": { \"$regex\": \"{{ $json.chatInput }}\", \"$options\": \"i\" } },\n    { \"location\": { \"$regex\": \"{{ $json.chatInput }}\", \"$options\": \"i\" } },\n    { \"description\": { \"$regex\": \"{{ $json.chatInput }}\", \"$options\": \"i\" } }\n  ]\n}",
        "options": {
          "limit": 5
        }
      },
      "name": "Query MongoDB",
      "type": "n8n-nodes-base.mongoDb",
      "position": [900, 300],
      "id": "mongodb-001",
      "credentials": {
        "mongoDb": {
          "name": "TravelEase MongoDB"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $input.all().length }}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "name": "Has Results?",
      "type": "n8n-nodes-base.if",
      "position": [1120, 300],
      "id": "results-check-001"  
    },
    {
      "parameters": {
        "jsCode": "// Format the destination results\nlet message = \"üåç Here are the destinations I found:\\n\\n\";\n\nfor (let i = 0; i < items.length && i < 3; i++) {\n  const dest = items[i].json;\n  message += `**${i + 1}. ${dest.name}**\\n`;\n  message += `üìç Location: ${dest.location}\\n`;\n  message += `‚ÑπÔ∏è ${dest.description}\\n`;\n  if (dest.image) {\n    message += `üñºÔ∏è Image: ${dest.image}\\n`;\n  }\n  message += \"\\n---\\n\\n\";\n}\n\nif (items.length > 3) {\n  message += `... and ${items.length - 3} more destinations found.\\n\\n`;\n}\n\nmessage += `Found ${items.length} destination(s) total. Need more details about any specific place?`;\n\nreturn {\n  response: message,\n  type: \"destinations_found\",\n  count: items.length,\n  destinations: items.map(item => item.json)\n};"
      },
      "name": "Format Results",
      "type": "n8n-nodes-base.code",
      "position": [1340, 200],
      "id": "format-results-001"
    },
    {
      "parameters": {
        "jsCode": "return {\n  response: \"I couldn't find any destinations matching your query. üòî\\n\\nTry asking about popular destinations like:\\n‚Ä¢ Paris, France üá´üá∑\\n‚Ä¢ Tokyo, Japan üáØüáµ\\n‚Ä¢ New York, USA üá∫üá∏\\n‚Ä¢ Rome, Italy üáÆüáπ\\n‚Ä¢ Bali, Indonesia üáÆüá©\\n‚Ä¢ Sydney, Australia üá¶üá∫\\n\\nWhat destination would you like to explore?\",\n  type: \"no_results\"\n};"
      },
      "name": "No Results Response",
      "type": "n8n-nodes-base.code",
      "position": [1340, 400],
      "id": "no-results-001"
    },
    {
      "parameters": {
        "jsCode": "return {\n  response: \"I'm here to help with travel destinations! üåç\\n\\nYou can ask me about:\\n‚Ä¢ Specific places ('Tell me about Paris')\\n‚Ä¢ General destinations ('Show me places to visit')\\n‚Ä¢ Travel information\\n\\nWhat would you like to know?\",\n  type: \"help\"\n};"
      },
      "name": "Default Response",
      "type": "n8n-nodes-base.code",
      "position": [900, 500],
      "id": "default-response-001"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"response\": \"{{ $json.response }}\",\n  \"type\": \"{{ $json.type }}\",\n  \"count\": {{ $json.count || 0 }},\n  \"destinations\": {{ JSON.stringify($json.destinations || []) }}\n}"
      },
      "name": "Send Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [1560, 300],
      "id": "send-response-001"
    }
  ],
  "connections": {
    "Chat Webhook": {
      "main": [
        [
          {
            "node": "Process Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Input": {
      "main": [
        [
          {
            "node": "Is Greeting?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is Destination Query?", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Greeting?": {
      "main": [
        [
          {
            "node": "Greeting Response",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Is Destination Query?": {
      "main": [
        [
          {
            "node": "Query MongoDB",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Default Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query MongoDB": {
      "main": [
        [
          {
            "node": "Has Results?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Results?": {
      "main": [
        [
          {
            "node": "Format Results",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Results Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Results": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Greeting Response": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Results Response": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Response": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": ["chat", "travel", "destinations"],
  "triggerCount": 1,
  "updatedAt": "2025-01-05T00:00:00.000Z",
  "versionId": "3"
}
