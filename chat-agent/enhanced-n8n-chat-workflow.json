{
  "name": "TravelEase Chat Agent - Full Integration",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "travelease-chat",
        "responseMode": "responseNode",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "webhook-chat-main",
      "name": "Chat Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [240, 300],
      "webhookId": "travelease-chat-main"
    },
    {
      "parameters": {
        "jsCode": "// Enhanced message processing for TravelEase\nconst userMessage = $input.first().json.message || '';\nconst sessionId = $input.first().json.sessionId || Date.now().toString();\nconst userId = $input.first().json.userId || 'anonymous';\n\n// Clean and normalize the message\nconst cleanMessage = userMessage.toLowerCase().trim();\n\n// Intent detection\nconst intents = {\n  greeting: ['hi', 'hello', 'hey', 'start', 'chat'],\n  destinations: ['destination', 'place', 'location', 'country', 'city', 'where'],\n  tours: ['tour', 'trip', 'package', 'vacation', 'travel'],\n  pricing: ['price', 'cost', 'budget', 'cheap', 'expensive', 'affordable'],\n  booking: ['book', 'reserve', 'available', 'schedule'],\n  featured: ['popular', 'featured', 'recommended', 'best', 'top']\n};\n\n// Detect primary intent\nlet detectedIntent = 'general';\nfor (const [intent, keywords] of Object.entries(intents)) {\n  if (keywords.some(keyword => cleanMessage.includes(keyword))) {\n    detectedIntent = intent;\n    break;\n  }\n}\n\n// Extract entities\nconst entities = {};\n\n// Extract destination names\nconst commonDestinations = ['paris', 'tokyo', 'new york', 'rome', 'bali', 'sydney', 'london', 'dubai', 'barcelona', 'amsterdam'];\nentities.destination = commonDestinations.find(dest => cleanMessage.includes(dest)) || null;\n\n// Extract price range\nconst priceMatch = cleanMessage.match(/(\\d+)\\s*-\\s*(\\d+)|under\\s*(\\d+)|below\\s*(\\d+)/);\nif (priceMatch) {\n  entities.priceRange = {\n    min: priceMatch[1] ? parseInt(priceMatch[1]) : 0,\n    max: priceMatch[2] || priceMatch[3] || priceMatch[4] ? parseInt(priceMatch[2] || priceMatch[3] || priceMatch[4]) : 10000\n  };\n}\n\n// Extract duration\nconst durationMatch = cleanMessage.match(/(\\d+)\\s*(day|week|month)s?/);\nif (durationMatch) {\n  entities.duration = {\n    value: parseInt(durationMatch[1]),\n    unit: durationMatch[2]\n  };\n}\n\nreturn {\n  originalMessage: userMessage,\n  cleanMessage: cleanMessage,\n  sessionId: sessionId,\n  userId: userId,\n  intent: detectedIntent,\n  entities: entities,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "enhanced-processor",
      "name": "Enhanced Message Processor",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false
          },
          "conditions": [
            {
              "id": "greeting-condition",
              "leftValue": "={{ $json.intent }}",
              "rightValue": "greeting",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        }
      },
      "id": "intent-router",
      "name": "Intent Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Greeting response\nconst responses = [\n  \"Hello! 👋 Welcome to TravelEase! I'm here to help you discover amazing destinations and plan your perfect trip. What adventure are you looking for?\",\n  \"Hi there! 🌍 Ready to explore the world? I can help you find destinations, tours, pricing information, and booking assistance!\",\n  \"Welcome to TravelEase! ✈️ Let's make your travel dreams come true! How can I assist you today?\"\n];\n\nconst randomResponse = responses[Math.floor(Math.random() * responses.length)];\n\nreturn {\n  response: randomResponse,\n  intent: 'greeting',\n  confidence: 1.0\n};"
      },
      "id": "greeting-response",
      "name": "Greeting Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false
          },
          "conditions": [
            {
              "id": "destinations-condition",
              "leftValue": "={{ $json.intent }}",
              "rightValue": "destinations",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        }
      },
      "id": "destinations-check",
      "name": "Destinations Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 400]
    },
    {
      "parameters": {
        "operation": "find",
        "collection": "destinations",
        "query": "={{ $json.entities.destination ? { name: { $regex: $json.entities.destination, $options: 'i' } } : {} }}",
        "limit": 5
      },
      "id": "query-destinations",
      "name": "Query Destinations",
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [1120, 320],
      "credentials": {
        "mongoDb": {
          "id": "mongodb-travelease",
          "name": "TravelEase MongoDB"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Process destination query results\nconst destinations = $input.all();\nconst userIntent = $('Enhanced Message Processor').first().json;\n\nif (destinations.length === 0) {\n  return {\n    response: \"I'd love to help you find destinations! 🗺️ We have amazing places like Paris, Tokyo, Bali, Sydney, New York, and Rome. Could you tell me what type of experience you're looking for? Adventure, relaxation, culture, or something else?\",\n    intent: 'destinations',\n    confidence: 0.8\n  };\n}\n\nif (destinations.length === 1) {\n  const dest = destinations[0].json;\n  return {\n    response: `🌟 ${dest.name} is an amazing destination! ${dest.description || 'It offers incredible experiences for travelers.'} Would you like to know more about tours to ${dest.name} or see other destinations?`,\n    intent: 'destinations',\n    confidence: 1.0,\n    destination: dest\n  };\n}\n\n// Multiple destinations\nconst destList = destinations.slice(0, 3).map(d => d.json.name).join(', ');\nreturn {\n  response: `🏝️ Great! I found several amazing destinations: ${destList}. Each offers unique experiences! Which one interests you most, or would you like me to recommend based on your preferences?`,\n  intent: 'destinations',\n  confidence: 0.9,\n  destinations: destinations.map(d => d.json)\n};"
      },
      "id": "process-destinations",
      "name": "Process Destinations",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 320]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false
          },
          "conditions": [
            {
              "id": "tours-condition",
              "leftValue": "={{ $json.intent }}",
              "rightValue": "tours",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        }
      },
      "id": "tours-check",
      "name": "Tours Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 600]
    },
    {
      "parameters": {
        "operation": "find",
        "collection": "tours",
        "query": "={{ $json.entities.destination ? { destination: { $regex: $json.entities.destination, $options: 'i' } } : {} }}",
        "limit": 3
      },
      "id": "query-tours",
      "name": "Query Tours",
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [1120, 520],
      "credentials": {
        "mongoDb": {
          "id": "mongodb-travelease",
          "name": "TravelEase MongoDB"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Process tours query results\nconst tours = $input.all();\nconst userIntent = $('Enhanced Message Processor').first().json;\n\nif (tours.length === 0) {\n  return {\n    response: \"✈️ We have incredible tour packages for every traveler! Our tours include romantic getaways, adventure expeditions, cultural immersions, and luxury escapes. What type of experience interests you most?\",\n    intent: 'tours',\n    confidence: 0.8\n  };\n}\n\nif (tours.length === 1) {\n  const tour = tours[0].json;\n  return {\n    response: `🎒 ${tour.title || 'This tour'} sounds perfect! ${tour.description || 'It offers an amazing travel experience.'} ${tour.price ? `Starting from $${tour.price}` : 'Contact us for pricing'}. Would you like to know more or see other tours?`,\n    intent: 'tours',\n    confidence: 1.0,\n    tour: tour\n  };\n}\n\n// Multiple tours\nconst tourList = tours.slice(0, 2).map(t => `${t.json.title || 'Tour'} ${t.json.price ? `($${t.json.price})` : ''}`).join(', ');\nreturn {\n  response: `🌟 I found some great tours for you: ${tourList}. Each offers unique experiences and great value! Which one catches your eye, or would you like more details?`,\n  intent: 'tours',\n  confidence: 0.9,\n  tours: tours.map(t => t.json)\n};"
      },
      "id": "process-tours",
      "name": "Process Tours",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 520]
    },
    {
      "parameters": {
        "jsCode": "// Default response for other intents\nconst userIntent = $('Enhanced Message Processor').first().json;\n\nconst responses = {\n  pricing: \"💰 Our tours cater to all budgets! Prices range from $500 for weekend getaways to $5000+ for luxury experiences. All packages include transparent pricing with no hidden fees. What's your ideal budget range?\",\n  booking: \"📅 Booking is simple! Browse destinations → Select your package → Choose dates → Secure checkout. You can modify bookings up to 7 days before departure. Ready to start your journey?\",\n  featured: \"🌟 Our most popular destinations include romantic Paris, vibrant Tokyo, tropical Bali, and cosmopolitan Sydney! Each offers unique experiences. What type of adventure interests you?\",\n  general: \"That sounds interesting! 🌍 I'm here to help you with destinations, tour packages, pricing, bookings, and travel planning. What specific aspect of your travel experience would you like to explore?\"\n};\n\nconst response = responses[userIntent.intent] || responses.general;\n\nreturn {\n  response: response,\n  intent: userIntent.intent,\n  confidence: 0.7\n};"
      },
      "id": "default-response",
      "name": "Default Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 700]
    },
    {
      "parameters": {
        "jsCode": "// Combine all responses and add metadata\nconst allInputs = $input.all();\nconst response = allInputs[0].json;\nconst originalInput = $('Enhanced Message Processor').first().json;\n\n// Add conversation metadata\nconst finalResponse = {\n  message: response.response,\n  intent: response.intent,\n  confidence: response.confidence || 0.7,\n  sessionId: originalInput.sessionId,\n  userId: originalInput.userId,\n  timestamp: new Date().toISOString(),\n  data: response.destination || response.destinations || response.tour || response.tours || null\n};\n\nreturn finalResponse;"
      },
      "id": "response-formatter",
      "name": "Response Formatter",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1560, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [1780, 400]
    }
  ],
  "connections": {
    "Chat Webhook": {
      "main": [
        [
          {
            "node": "Enhanced Message Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Message Processor": {
      "main": [
        [
          {
            "node": "Intent Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Intent Router": {
      "main": [
        [
          {
            "node": "Greeting Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Destinations Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Greeting Response": {
      "main": [
        [
          {
            "node": "Response Formatter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Destinations Check": {
      "main": [
        [
          {
            "node": "Query Destinations",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Tours Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Destinations": {
      "main": [
        [
          {
            "node": "Process Destinations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Destinations": {
      "main": [
        [
          {
            "node": "Response Formatter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tours Check": {
      "main": [
        [
          {
            "node": "Query Tours",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Default Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Tours": {
      "main": [
        [
          {
            "node": "Process Tours",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Tours": {
      "main": [
        [
          {
            "node": "Response Formatter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Response": {
      "main": [
        [
          {
            "node": "Response Formatter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response Formatter": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "travelease-chat-v2",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "travelease-enhanced-chat",
  "tags": []
}
