version: '3.8'

services:
  # Your existing services
  client:
    build: 
      context: ./client
      args:
        - NODE_ENV=development
    ports:
      - "80:80"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://server:5000
      - REACT_APP_N8N_WEBHOOK_URL=http://n8n:5678/webhook/travelease-chat
      - API_BACKEND=server:5000
    volumes:
      - ./client/src:/app/src
    depends_on:
      server:
        condition: service_started
      n8n:
        condition: service_started
    networks:
      - travel-network

  server:
    build: ./server
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://admin:admin@mongo:27017/travelease?authSource=admin
      - JWT_SECRET=TravelEase2025SecretKeyForJWTTokens987654321
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook/travelease-chat
    depends_on:
      mongo:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - travel-network
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: unless-stopped

  mongo:
    image: mongo:5.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=travelease
    volumes:
      - mongo-data:/data/db
      - ./server/seed.js:/docker-entrypoint-initdb.d/seed.js:ro
    networks:
      - travel-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # n8n Automation Platform
  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_SECURE_COOKIE = false
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=UTC
    volumes:
      - n8n-data:/home/node/.n8n
      - ./chat-agent:/home/node/.n8n/workflows
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - travel-network
    restart: unless-stopped

  # PostgreSQL for n8n
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - travel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  mongo-data:
  n8n-data:
  postgres-data:

networks:
  travel-network:
    driver: bridge
